// DOM Content Loaded
document.addEventListener('DOMContentLoaded', function() {
    // Initialize animations and functionality
    initFloatingElements();
    initScrollAnimations();
    initSkillBars();
    initMobileMenu();
    initFormValidation();
});

// Create floating elements dynamically
function initFloatingElements() {
    const floatingContainer = document.querySelector('.floating-elements');
    
    // Clear any existing elements
    floatingContainer.innerHTML = '';
    
    // Create 8 floating elements
    for (let i = 0; i < 8; i++) {
        const size = Math.random() * 50 + 30;
        const top = Math.random() * 100;
        const left = Math.random() * 100;
        const delay = Math.random() * 5;
        const duration = Math.random() * 10 + 15;
        
        const element = document.createElement('div');
        element.classList.add('floating-element');
        element.style.width = `${size}px`;
        element.style.height = `${size}px`;
        element.style.top = `${top}%`;
        element.style.left = `${left}%`;
        element.style.animationDelay = `${delay}s`;
        element.style.animationDuration = `${duration}s`;
        
        floatingContainer.appendChild(element);
    }
}

// Initialize scroll animations for elements
function initScrollAnimations() {
    const observerOptions = {
        root: null,
        rootMargin: '0px',
        threshold: 0.1
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                if (entry.target.classList.contains('project-card') || 
                    entry.target.classList.contains('skill')) {
                    entry.target.classList.add('visible');
                    
                    // Animate skill bars if it's a skill element
                    if (entry.target.classList.contains('skill')) {
                        const progressBar = entry.target.querySelector('.progress-bar');
                        if (progressBar) {
                            const width = progressBar.getAttribute('data-width');
                            setTimeout(() => {
                                progressBar.style.width = width;
                            }, 300);
                        }
                    }
                }
            }
        });
    }, observerOptions);

    // Observe project cards
    document.querySelectorAll('.project-card').forEach(card => {
        observer.observe(card);
    });

    // Observe skill items
    document.querySelectorAll('.skill').forEach(skill => {
        observer.observe(skill);
    });
}

// Initialize skill bar animations
function initSkillBars() {
    const progressBars = document.querySelectorAll('.progress-bar');
    progressBars.forEach(bar => {
        const width = bar.getAttribute('data-width');
        bar.style.width = '0';
    });
}

// Initialize mobile menu functionality
function initMobileMenu() {
    const menuBtn = document.querySelector('.menu-btn');
    const navLinks = document.querySelector('.nav-links');
    
    if (menuBtn && navLinks) {
        menuBtn.addEventListener('click', () => {
            navLinks.classList.toggle('active');
            
            // Animate menu bars
            const menuBars = document.querySelectorAll('.menu-bar');
            if (navLinks.classList.contains('active')) {
                menuBars[0].style.transform = 'rotate(45deg) translate(5px, 5px)';
                menuBars[1].style.opacity = '0';
                menuBars[2].style.transform = 'rotate(-45deg) translate(7px, -6px)';
            } else {
                menuBars[0].style.transform = 'none';
                menuBars[1].style.opacity = '1';
                menuBars[2].style.transform = 'none';
            }
        });
    }
    
    // Close menu when clicking on a link
    const navItems = document.querySelectorAll('.nav-links a');
    navItems.forEach(item => {
        item.addEventListener('click', () => {
            navLinks.classList.remove('active');
            
            // Reset menu bars
            const menuBars = document.querySelectorAll('.menu-bar');
            menuBars[0].style.transform = 'none';
            menuBars[1].style.opacity = '1';
            menuBars[2].style.transform = 'none';
        });
    });
}

// Initialize form validation
function initFormValidation() {
    const contactForm = document.getElementById('contactForm');
    
    if (contactForm) {
        contactForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Basic validation
            const nameInput = document.getElementById('name');
            const emailInput = document.getElementById('email');
            const messageInput = document.getElementById('message');
            
            let isValid = true;
            
            if (!nameInput.value.trim()) {
                highlightError(nameInput);
                isValid = false;
            } else {
                removeHighlight(nameInput);
            }
            
            if (!emailInput.value.trim() || !isValidEmail(emailInput.value)) {
                highlightError(emailInput);
                isValid = false;
            } else {
                removeHighlight(emailInput);
            }
            
            if (!messageInput.value.trim()) {
                highlightError(messageInput);
                isValid = false;
            } else {
                removeHighlight(messageInput);
            }
            
            if (isValid) {
                // Simulate form submission
                const btn = contactForm.querySelector('.btn');
                btn.textContent = 'Sending...';
                btn.disabled = true;
                
                setTimeout(() => {
                    alert('Thank you for your message! I will get back to you soon.');
                    contactForm.reset();
                    btn.textContent = 'Send Message';
                    btn.disabled = false;
                }, 1500);
            }
        });
    }
}

// Helper function to validate email
function isValidEmail(email) {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
}

// Helper function to highlight error field
function highlightError(field) {
    field.style.boxShadow = '0 0 0 2px #ff4d4d';
}

// Helper function to remove highlight from field
function removeHighlight(field) {
    field.style.boxShadow = 'none';
}

// Smooth scrolling for navigation links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
        e.preventDefault();
        
        const targetId = this.getAttribute('href');
        if (targetId === '#') return;
        
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
            window.scrollTo({
                top: targetElement.offsetTop - 80,
                behavior: 'smooth'
            });
        }
    });
});
